rust-perlmod (0.13.6-1) bookworm; urgency=medium

  * fix byte alignment of ELF notes entries

 -- Proxmox Support Team <support@proxmox.com>  Thu, 06 Feb 2025 17:28:25 +0100

rust-perlmod (0.13.5-1) bookworm; urgency=medium

  * document 'errno' and 'serializ_error' parameters for `#[export]`

  * add missing drop handler for `RawGuard`

  * fix serialization of newtype and tuple enum variants

  * add private module to generate ELF notes for packages

 -- Proxmox Support Team <support@proxmox.com>  Thu, 16 Jan 2025 13:37:31 +0100

rust-perlmod (0.13.4-1) bookworm; urgency=medium

  * add perlmod::ffi::use_safe_putenv to deal with perl's broken environ
    handling

 -- Proxmox Support Team <support@proxmox.com>  Thu, 05 Oct 2023 13:40:56 +0200

rust-perlmod (0.13.3-1) bookworm; urgency=medium

  * add `instantiate_magic_result!` macro for improved error handling over
    `instantiate_magic!`.

 -- Proxmox Support Team <support@proxmox.com>  Wed, 26 Jul 2023 09:51:34 +0200

rust-perlmod (0.13.2-1) stable; urgency=medium

  * clippy fixups & code health

  * add perlmod::error::{set/get}_errno() as errno API

  * bump macro to 0.8.1 to support the 'serialize_error' and 'errno' attributes

 -- Proxmox Support Team <support@proxmox.com>  Wed, 10 May 2023 10:11:19 +0200

rust-perlmod (0.13.1-1) stable; urgency=medium

  * provide perlmod::ser::is_active helper

 -- Proxmox Support Team <support@proxmox.com>  Fri, 25 Mar 2022 15:45:45 +0100

rust-perlmod (0.13.0-1) stable; urgency=medium

  * add `merge_str_slice` convenience helper

  * drop `Result` from `substr_from_str_slice` return value

  * handle SvUTF8 flag in `substr_from_str_slice`

 -- Proxmox Support Team <support@proxmox.com>  Fri, 04 Mar 2022 09:01:32 +0100

rust-perlmod (0.12.2-1) stable; urgency=medium

  * fix 'substr_from_str_slice' failing if the substring is at the end of the
    string

 -- Proxmox Support Team <support@proxmox.com>  Tue, 01 Mar 2022 15:12:50 +0100

rust-perlmod (0.12.1-1) stable; urgency=medium

  * move 'substr_from_str_slice' from ScalarRef to Scalar

 -- Proxmox Support Team <support@proxmox.com>  Tue, 01 Mar 2022 14:41:44 +0100

rust-perlmod (0.12.0-1) stable; urgency=medium

  * add experimental support for explicit substring handling

  * bump macro to 0.8.0
    - boot xsubs have been renamed to boot_PACKAGE__NAME
    - .pm files aren't written out by default anymore

 -- Proxmox Support Team <support@proxmox.com>  Fri, 25 Feb 2022 15:47:59 +0100

rust-perlmod (0.11.0-1) stable; urgency=medium

  * support visibility in `perl_fn!`

  * bump macro to 0.7.0

 -- Proxmox Support Team <support@proxmox.com>  Tue, 25 Jan 2022 09:32:52 +0100

rust-perlmod (0.10.1-1) stable; urgency=medium

  * let ffi::RSPL_newXS_flags return the CV pointer

  * let the perl_fn! macro also handle just types, not full functions with
    bodies

  * add Value::new_xsub as an taking a `perl_fn!(extern "C" fn(*mut CV))`

  * use #[deny(unsafe_op_in_unsafe_fn)] and update code accordingly

 -- Proxmox Support Team <support@proxmox.com>  Fri, 17 Dec 2021 09:21:24 +0100

rust-perlmod (0.10.0-1) stable; urgency=medium

  * bugfix: declare_magic now declares MAGIC as a static instead of a const,
    since it needs its storage guarantees

  * bugfix: instantiate_magic uses the provided magic value rather than
    hardcoding literally 'MAGIC'

  * MagicSpec has no value anymore, its with_value creates a new MagicValue

  * MagicValue combines a MagicSpec with a value

  * bump to rust edition 2021

  * some documentation fixups

 -- Proxmox Support Team <support@proxmox.com>  Tue, 14 Dec 2021 13:41:25 +0100

rust-perlmod (0.9.0-1) stable; urgency=medium

  * build glue c code with opt_level 3 even in debug mode

  * update perlmod-macro to 0.6

 -- Proxmox Support Team <support@proxmox.com>  Fri, 26 Nov 2021 14:02:33 +0100

rust-perlmod (0.8.2-1) stable; urgency=medium

  * add enum in deserialization support

 -- Proxmox Support Team <support@proxmox.com>  Fri, 05 Nov 2021 10:14:50 +0100

rust-perlmod (0.8.1-1) stable; urgency=medium

  * Add Value::as_array

  * Add Value::as_array_mut

  * Add Value::as_hash

  * Add Value::as_hash_mut

 -- Proxmox Support Team <support@proxmox.com>  Tue, 02 Nov 2021 14:32:02 +0100

rust-perlmod (0.8.0-1) stable; urgency=medium

  * add Value::new_hash for convenience

  * impl AsRef<ScalarRef> for Value

  * impl AsMut<ScalarRef> for Value

  * add glue code for working with "magic"

  * add helpers to add magic with less unsafe code and have drop handlers
    called automatically

 -- Proxmox Support Team <support@proxmox.com>  Thu, 28 Oct 2021 09:18:51 +0200

rust-perlmod (0.7.2-1) stable; urgency=medium

  * ffi: add RSPL_newXS_flags helper to allow making bootstrap functions

 -- Proxmox Support Team <support@proxmox.com>  Mon, 25 Oct 2021 10:05:09 +0200

rust-perlmod (0.7.1-1) stable; urgency=medium

  * add Value::bless_box helper

  * improve documentation

 -- Proxmox Support Team <support@proxmox.com>  Tue, 19 Oct 2021 10:31:07 +0200

rust-perlmod (0.7.0-1) stable; urgency=medium

  * properly prevent ScalarRef values from being created

 -- Proxmox Support Team <support@proxmox.com>  Thu, 14 Oct 2021 15:22:12 +0200

rust-perlmod (0.6.0-1) stable; urgency=medium

  * update to perlmod-macro 0.4.0

  * impl Clone for Value, Scalar, Hash, Array

  * add RawValue as a raw value *de*serialization helper

  * perlmod::to_value now will NOT copy perl values anymore, instead, they
    will be serialized as references now

  * perlmod::from_value will now cause perl values to NOT be copied anymore
    either, instead, they will be references

 -- Proxmox Support Team <support@proxmox.com>  Wed, 13 Oct 2021 11:30:30 +0200

rust-perlmod (0.5.3-3) stable; urgency=medium

  * improve deserialization of 'undef'

 -- Proxmox Support Team <support@proxmox.com>  Mon, 19 Jul 2021 10:32:31 +0200

rust-perlmod (0.5.2-2) stable; urgency=medium

  * bump perlmod-macro dependency

  * mark strings with codepoints >=128 as utf8 when serializing to perl

 -- Proxmox Support Team <support@proxmox.com>  Fri, 02 Jul 2021 11:40:24 +0200

rust-perlmod (0.5.1-1) stable; urgency=medium

  * fix newtype struct deserialization

 -- Proxmox Support Team <support@proxmox.com>  Wed, 23 Jun 2021 10:58:40 +0200

rust-perlmod (0.5.0-1) stable; urgency=medium

  * add support for deserializing PVLV magic (lvalues)

 -- Proxmox Support Team <support@proxmox.com>  Mon, 21 Jun 2021 12:38:48 +0200

rust-perlmod (0.4.3-1) stable; urgency=medium

  * fix an issue with serializing empty arrays

 -- Proxmox Support Team <support@proxmox.com>  Tue, 09 Mar 2021 15:35:59 +0100

rust-perlmod (0.4.2-1) stable; urgency=medium

  * allow scalars with magic in deserialization

  * bump macro to 0.3.1

 -- Proxmox Support Team <support@proxmox.com>  Tue, 23 Feb 2021 14:25:34 +0100

rust-perlmod (0.4.1-1) stable; urgency=medium

  * fix a refcount issue with Hash::insert_by_value

 -- Proxmox Support Team <support@proxmox.com>  Tue, 16 Feb 2021 12:37:43 +0100

rust-perlmod (0.4.0-1) stable; urgency=medium

  * depend on perlmod-macro 0.3.0

 -- Proxmox Support Team <support@proxmox.com>  Tue, 16 Feb 2021 10:44:08 +0100

rust-perlmod (0.3.0-1) stable; urgency=medium

  * breaking change to destructor macro due to compiler restructions

 -- Proxmox Support Team <support@proxmox.com>  Mon, 15 Feb 2021 16:05:44 +0100

rust-perlmod (0.2.3-1) stable; urgency=medium

  * fix an issue with deserializing 'undef' values

  * bump macro dependency

 -- Proxmox Support Team <support@proxmox.com>  Mon, 15 Feb 2021 14:55:45 +0100

rust-perlmod (0.2.2-1) stable; urgency=medium

  * `#[export]` fns now accept a `#[try_from_ref]` attribute on parameters

  * improve documentation

 -- Proxmox Support Team <support@proxmox.com>  Wed, 09 Dec 2020 09:23:46 +0100

rust-perlmod (0.2.1-1) stable; urgency=medium

  * depend on perlmod-macro 0.2.1: non-debug builds don't include
    `-L./target/debug` in their perl modules anymore

  * support deserializing borrowed strings (mostly useful for exporter
    function parameters)

 -- Proxmox Support Team <support@proxmox.com>  Fri, 27 Nov 2020 14:34:44 +0100

rust-perlmod (0.2.0-1) stable; urgency=medium

  * add convenience methods for raw pointer types

  * support blessed values

  * support deserializing by reference to allow `&[u8]` parameters
    introduces: perlmod::from_ref_value(&Value)

  * improve documentation and examples

  * make `SvPVbyte` in `Value`s safe by checking whether they can be converted
    first (otherwise it could potentially trigger a `longjmp`)

  * add `destructor!` convenience macro

  * `Serializer` and `Deserializer` & helper types are now private

 -- Proxmox Support Team <support@proxmox.com>  Thu, 26 Nov 2020 13:51:51 +0100

rust-perlmod (0.1.0-1) stable; urgency=medium

  * initial packaging

 -- Proxmox Support Team <support@proxmox.com>  Fri, 20 Nov 2020 13:55:27 +0100
