rust-perlmod-macro (0.9.1-1) bookworm; urgency=medium

  * wrap xs calls in catch_unwind so that panics just 'croak' in perl

  * use alternate error representation so it includes context

 -- Proxmox Support Team <support@proxmox.com>  Thu, 03 Apr 2025 15:14:18 +0200

rust-perlmod-macro (0.9.0-1) bookworm; urgency=medium

  * 'unraw' function names, so exported subs can be named 'r#type' etc.

  * create a .notes.perlmod.package ELF section for every #[package]

 -- Proxmox Support Team <support@proxmox.com>  Thu, 16 Jan 2025 13:35:26 +0100

rust-perlmod-macro (0.8.4-1) bookworm; urgency=medium

  * search LD_LIBRARY_PATH before @INC/auto in #[package(write = true)]
    generated code

 -- Proxmox Support Team <support@proxmox.com>  Tue, 19 Dec 2023 08:41:49 +0100

rust-perlmod-macro (0.8.3-1) stable; urgency=medium

  * Update to syn 2

 -- Proxmox Support Team <support@proxmox.com>  Tue, 03 Oct 2023 08:34:25 +0200

rust-perlmod-macro (0.8.2-1) stable; urgency=medium

  * Ensure the XS registration portion of bootstrap functions are only called
    once.

  * Allow calling bootstrap functions directly more easily by making the
    unused `cv` parameter optional.

  * Add the `boot` attribute to `#[package]`, which is a path to a function
    called after the bootstrap function has completed.

 -- Proxmox Support Team <support@proxmox.com>  Wed, 26 Jul 2023 09:53:42 +0200

rust-perlmod-macro (0.8.1-1) stable; urgency=medium

  * clippy fixups & code health

  * fix syntax error in code generated for non-result tuple return types

  * add a 'serialize_error' export attribute for structured error values

  * add an 'errno' export attribute to copy the perlmod errno value to libc's errno value
    at the end of an exported function

 -- Proxmox Support Team <support@proxmox.com>  Wed, 10 May 2023 10:11:34 +0200

rust-perlmod-macro (0.8.0-1) stable; urgency=medium

  * bring error span handling up to date (remove some unnecessary clones)

  * add a 'write' boolean attribute to packages

  * rename boot xsubs to 'boot_PACKAGE__NAME'

  * .pm files aren't written out by default anymore, only if:
      a 'file' attribute is set
      or the 'write' attribute is set to true
      or the PERLMOD_WRITE_PACKAGES environment variable is set to 1

 -- Proxmox Support Team <support@proxmox.com>  Fri, 25 Feb 2022 15:48:49 +0100

rust-perlmod-macro (0.7.0-1) stable; urgency=medium

  * expose 'cv' parameter on exports via the #[cv] attribute on a `Value`

  * change 'multiplicity' parameter type from `*const usize` to
    `*const ffi::Interpreter`

  * use raw pointer for CV parameter in xs subs

  * copy visibility to xsub wrappers

 -- Proxmox Support Team <support@proxmox.com>  Tue, 25 Jan 2022 09:28:48 +0100

rust-perlmod-macro (0.6.0-1) stable; urgency=medium

  * don't publicly export xs methods in packages made with #[package]

  * make trailing Option<> parameters actually optional parameters with a
    semicolon in their perl prototype

  * fix missing parameter names in error messages

 -- Proxmox Support Team <support@proxmox.com>  Fri, 26 Nov 2021 14:00:28 +0100

rust-perlmod-macro (0.5.0-1) stable; urgency=medium

  * detect perl's MULTIPLICITY configuration and adapt function signatures,
    note that the corresponding parameters have not been used before, and
    are still unused, so this is not really a breaking change

 -- Proxmox Support Team <support@proxmox.com>  Thu, 28 Oct 2021 09:15:14 +0200

rust-perlmod-macro (0.4.1-1) stable; urgency=medium

  * put `-L./target/debug` first in library path on debug builds

  * generage bootstrap functions for packages

  * change generated .pm files to utilize the bootstrap functions

  * requires perlmod 0.7.2 or higher

 -- Proxmox Support Team <support@proxmox.com>  Mon, 25 Oct 2021 10:03:47 +0200

rust-perlmod-macro (0.4.0-1) stable; urgency=medium

  * drop toml dependency

  * use CARGO_PKG_NAME environment variable instead of parsing Cargo.toml for
    it

  * expand environment variables in lib, name and file attribute of package
    attributes

 -- Proxmox Support Team <support@proxmox.com>  Wed, 13 Oct 2021 11:29:59 +0200

rust-perlmod-macro (0.3.2-1) stable; urgency=medium

  * add newlines to errors passed to croak_sv

 -- Proxmox Support Team <support@proxmox.com>  Wed, 30 Jun 2021 09:46:44 +0200

rust-perlmod-macro (0.3.1-1) stable; urgency=medium

  * adjust search directory to not contain the module name since there are
    multiple modules loading the same library

 -- Proxmox Support Team <support@proxmox.com>  Mon, 22 Feb 2021 14:13:14 +0100

rust-perlmod-macro (0.3.0-1) stable; urgency=medium

  * support tuple return types as fixed length 'list' return types in perl

  * support Result and non-Result variants of all return types

 -- Proxmox Support Team <support@proxmox.com>  Tue, 16 Feb 2021 10:41:03 +0100

rust-perlmod-macro (0.2.3-1) stable; urgency=medium

  * mark the raw export functions as #[doc(hidden)]

 -- Proxmox Support Team <support@proxmox.com>  Mon, 15 Feb 2021 14:55:21 +0100

rust-perlmod-macro (0.2.2-1) stable; urgency=medium

  * introduce 'try_from_ref' parameter attribute

 -- Proxmox Support Team <support@proxmox.com>  Mon, 15 Feb 2021 10:36:28 +0100

rust-perlmod-macro (0.2.1-1) stable; urgency=medium

  * remove `-L./target/debug` from library paths in non-debug-builds

 -- Proxmox Support Team <support@proxmox.com>  Fri, 27 Nov 2020 13:05:20 +0100

rust-perlmod-macro (0.2.0-1) stable; urgency=medium

  * fix `#[export(name = ...)]` to name the actual perl function instead of
    the rust function

  * support returning raw non-serialized `Value` types via
    `#[export(raw_return)]`

  * support raw non-deserialized parameters via the `#[raw]`

  * support`&[u8]` parameters by switching to perlmod::from_ref_value for 
    parameters

  * drop `make_package!`

  * mark the `newXS` and `__load_shared_lib` functions in the generated
    perl files as `my sub` and move them into the `BEGIN` block for better
    namespacing

 -- Proxmox Support Team <support@proxmox.com>  Thu, 26 Nov 2020 13:53:49 +0100

rust-perlmod-macro (0.1.0-1) stable; urgency=medium

  * initial packaging

 -- Proxmox Support Team <support@proxmox.com>  Fri, 20 Nov 2020 13:55:25 +0100
